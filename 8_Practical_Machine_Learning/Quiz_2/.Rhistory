0.9943182 * 4
45550 * .75
45550 - 8000
37550 * .25
37550 * .75
data(manipulate)
dgamma
lm
print
mean
dgamma
show
colSums
show
getMethod("show")
getMethods("show")
showMethods("show")
getMethod("show")
install.packages("yhatr")
library("yhatr")
data(diamond)
plot(diamond$carat, diamond$price,
xlab = "Mass (carats)",
ylab = "Price (SIN $)",
bg = "lightblue",
col = "black", cex = 1.1, pch = 21,frame = FALSE)
abline(lm(price ~ carat, data = diamond), lwd = 2)
library(UsingR)
data(diamond)
plot(diamond$carat, diamond$price,
xlab = "Mass (carats)",
ylab = "Price (SIN $)",
bg = "lightblue",
col = "black", cex = 1.1, pch = 21,frame = FALSE)
abline(lm(price ~ carat, data = diamond), lwd = 2)
26300 - 45550
19250 - 9000
x <- c(0.61, 0.93, 0.83, 0.35, 0.54, 0.16, 0.91, 0.62, 0.62)
y <- c(0.67, 0.84, 0.6, 0.18, 0.85, 0.47, 1.1, 0.65, 0.36)
xMn <- mean(x)
yMn <- mean(y)
xSD <- sd(x)
xSD
ySD <- sd(y)
length(x)
xLen <- length(x)
yLen <- length(y)
lm(y ~ x)
x <- c(0.61, 0.93, 0.83, 0.35, 0.54, 0.16, 0.91, 0.62, 0.62)
y <- c(0.67, 0.84, 0.6, 0.18, 0.85, 0.47, 1.1, 0.65, 0.36)
t.test(x, y)
t.test(y, x)
lm(y ~ x - 1)
lm(y ~ x)
coef(y)
coef(y ~ x)
t.test(y - x)
t.test(x - y)
t <- .2271
pt(t, length(x) - 1)
pt(t, length(x) - 1, lower.tail=F)
pt(-abs(t), length(x) - 1, lower.tail=F)
power.t.test(n = 8, delta=mean(x), sd=sd(x))$power
power.t.test(n = 8, delta=mean(y), sd=sd(y))$power
fit <- lm(y ~ x)
coef(fit)
e <- resid(fit)
e
resid(lm(y ~ x))
x <- mtcars$wt
x
y <- mtcars$mpg
y
M <- mean(x)
fit3 <- lm(y ~ x)
fit3
predict(fit , newdata = data.frame(x=M), interval="confidence")
predict(fit3 , newdata = data.frame(x=M), interval="confidence")
x <- c(0.61, 0.93, 0.83, 0.35, 0.54, 0.16, 0.91, 0.62, 0.62)
y <- c(0.67, 0.84, 0.6, 0.18, 0.85, 0.47, 1.1, 0.65, 0.36)
fit <- lm(y ~ x)
fit
resid(fit)
mtcars
?mtcars
x
x <- mtcars$weight
y <- mtcars$mpg
x
names(mtcars)
x <- mtcars$wt
x
fit5 <- lm(y ~ x)
fit5
predict(fit , newdata = data.frame(wt = 3), interval="predict")
predict(fit5 , newdata = data.frame(wt = 3), interval="predict")
data(mtcars)
fit <- lm(mpg ~ wt, data = mtcars)
newdata <- data.frame(wt=3.00)
predict(fit, newdata, interval = ("predict"))
fit <- lm(mpg ~ wt, data = mtcars)
attach(mtcars)
fit <- lm(mpg ~ wt, data = mtcars)
newdata <- data.frame(wt=2000)
predict(fit, newdata, interval = ("confidence"))
12931.66 / 1000
predict(fit, newdata, interval = ("predict"))
fit <- lm(mpg ~ wt, data = mtcars)
fit
fit0 <- lm(mpg ~ wt - 1, data = mtcars)
fit0
x <- c(0.61, 0.93, 0.83, 0.35, 0.54, 0.16, 0.91, 0.62, 0.62)
y <- c(0.67, 0.84, 0.6, 0.18, 0.85, 0.47, 1.1, 0.65, 0.36)
fit1 <- lm(y ~ x)
fit1$sigma
summary(fit1)$sigma
summary(fit1)
summary(fit1)$tvalue
summary(fit1)$t.value
summary(fit1)$p-value
swirl()
install.packages("swirl")
library(swirl)
rm(list=ls())
swirl()
plot(child ~ parent, galton)
plot(jitter(child, 4) ~ parent, galton)
regrline <- lm(child ~ parent, galton)
abline(regrline, lwd = 3, col = 'red')
summary(regrline)
?swiss
head(swiss)
swirl()
library(swirl)
swirl()
lm(child ~ parent, data = galton)
fit <- lm(child ~ parent, data = galton)
fit <- lm(child ~ parent, galton)
library()
library(swirl)
swirl
swirl()
summary(fit$residuals)
summary(fit)
summary(fit$residuals)$mean
mean(fit$residuals)
con(fit$residuals, gaoton$parent)
cov(fit$residuals, gaoton$parent)
cov(fit$residuals, galton$parent)
fit$coef[1]
ols.ic <- fit$coef[1]
ols.slope <- fit$coef[2]
rhs - lhs
lhs - rhs
all.equal(lhs - rhs)
all.equal(rhs, lhs)
varChild <- var(OLS)
varChild <- var(fit$estimates, fit$residuals)
help()
varChild <- var(galton$child)
varRes <- var(fit$residuals)
varEst <- est(ols.slope, los.ic)
help()
varEst <- var(est(ols.slope, los.ic))
varEst <- var(est(ols.slope, ols.ic))
all.equal(varChild, varRes, varEst)
all.equal(varChild, varRes + varEst)
efit <- lm(accel ~ mag+dist, attenu)
mean(efit)
mean(efit$residuals)
cov(efit$residuals)
help()
cov(efit$residuals, attenu$mag)
cov(efit$residuals, attenu$dist)
cor(gpa_nor, gch_nor)
l_nor <- lm(gpa_nor ~j gch_nor)
l_nor <- lm(gpa_nor ~ gch_nor)
l_nor <- lm(gch_nor ~ gpa_nor)
fit <- lm(child ~ parent, galton)
sqrt(sum(fit$residuals) / (n - 2))
sqrt(sum(fit$residuals ^ 2) / (n - 2))
summary(fit)$sigma
deviance(fit) / (n - 2)
sqrt(deviance(fit) / (n - 2))
mu <- mean(galton$child)
sTot <- galton$child - mu
sTot <- sum(galton$child - mu) ^ 2)
sTot <- sum(galton$child - mu)^ 2)
sTot <- sum((galton$child - mu) ^ 2)
sRes <- deviance(sTot)
help()
sRes <- deviance(fit)
(sRes / sTot) - 1
1-sRes/sTot
summary(fit)$r.squared
help()
cor(galton$parent, galton$child) ^ 2
ones <- rep(1, norow(galton))
ones <- rep(1, nrow(galton))
dim(ones)
lm(chile ~ ones + paren - 1)
lm(chile ~ ones + parent - 1)
lm(child ~ ones + parent - 1)
lm(child ~ ones + parent - 1, galton)
lm(child ~ parent, galton)
lm(child ~ 1, galton)
View(trees)
fit <- lm(Volume ~ Girth + Height + Constant - 1, trees)
trees2 <- eliminate("Girth", trees)
View(trees2)
fit2 <- lm(Volume ~ Height + Constant - 1, trees2)
lapply(list(fit, fit2), coef)
help()
all <- lm(Fertility ~ ., swiss)
summary(all)
lm(Fertility ~ agriculture, swiss)
help()
summary(lm(Fertility ~ agriculture, swiss))
summary(lm(Fertility ~ Agriculture, swiss))
help()
cor(swiss$Examination, swiss$Education)
help()
cor(swiss$Agriculture, swiss$Education)
makelms()
ec <- sum(swiss$Examination, swiss$Catholic)
ec <- swiss$Examination + swiss$Catholic
efit <- lm(Fertility ~ . + ec, swiss)
help()
efit <- lm(Fertility ~ .)
efit <- lm(Fertility ~ ., swiss)
efit <- lm(Fertility ~ . + ec, swiss)
efit
swirl()
efit <- lm(Fertility ~ . + ec, swiss)
help()
swirl()
efit <- lm(Fertility ~ . + ec, swiss)
help()
swirl()
lm(Fertility ~ ., swiss)
library(swirl)
swirl()
help()
swirl()
6
head(InsectSprays)
swirl()
library(swirl())
swirl()
bye()
swirl()
dim(InsectSprays)
InsectSprays[1:15, 2]
InsectSprays[1:15, ]
head(InsectSprays, 15)
A
sx
sx$A
help()
sB
M[, 2]
help()
summary(InsectSprays[, 2])
help()
sapply(InsectSprays, class)
fit <- lm(count ~ spray)
fit <- lm(count ~ spray, InsectSprays)
fit$coef
summary(fit)$coef
count[, 1]
help()
est <- summary(fit)$coef[, 1]
help()
mean(sA)
mean(sB)
lm(count ~ spray - 1, InsectSprays)
nfit <- lm(count ~ spray - 1, InsectSprays)
summary(nfit)$coef
help()
spray2 <- relevel(InsectSprays$spray, \"C\")
spray2 <- relevel(InsectSprays$spray,\"C\")
spray2 <- relevel(InsectSprays$spray,\C\)
help()
spray2 <- relevel(InsectSprays$spray,\"X\")
spray2 <- relevel(InsectSprays$spray,"C\")
)
skip()
bye()
library(swirl)
swirl()
help()
spray2 <- relevel(InsectSprays$spray,\"C\")
spray2 <- relevel(InsectSprays$spray)
?relevel
spray2 <- relevel(InsectSprays$spray, "C")
help()
fit2 <- lm(count ~ spray2, InsectSprays)
summary(fit2)$coef
mean(sC)
(fit$coef[2]) - (fit$coef[3])
(fit$coef[2]-fit$coef[3])/1.6011
swirl()
download.file("hunger.csv")
download.file("hunger.csv", destfile="./hunger.csv")
swirl()
bye()
swirl()
fit <- lm(y ~ x, out2)
bye()
swirl()
bye()
swirl()
fit <- lm(y ~ x, out2)
plot(fit, which = 1)
fitno <- lm(y ~ x, out2[-1, ])
plot(fitno, which = 1)
coef(fit) - coef(fitno)
View(dfbeta(fit))
resno <- out2[1, "y"] - predict(fitno, out2[1, ])
1 - resid(fit)[1]  / resno
View(hatvalues(fit))
help()
sigma <- sqrt(deviance(fit) / df.residual(fit))
rstd <- sigma*sqrt(1-hatvalues(fit))
rstd <- resid(fit)/(sigma * sqrt(1-hatvalues(fit)))
View(cbind(rstd, rstandard(fit)))
plot(fit, which = 3)
plot(fit, which=2)
help()
sigma1 <- sqrt(deviance(fitno) / df.residual(fitno))
resid(fit)[1] / (sigma1 * sqrt(1-hatvalues(fit)[1]))
Vies(rstudent(fit))
View(rstudent(fit))
dy <- predict(fitno, out2) - predict(fit, out2)
dy / (2 * sigma ^ 2)
sum(dy^2)/(2*sigma^2)
plot(fit, which=5)
library(swirl)
swirl()
bye()
swirl()
rgp1()
rgp2()
View(swiss)
mdl <- lm(Fertility ~ ., swiss)
vif(mdl)
mdl2 <- lm(Fertility ~ . - Examination, swiss)
vif(mdl2)
help()
x1c <- simbias()
apply(x1c, 1, mean)
fit1 <- lm(Fertility ~ Agriculture, swiss)
fit3 <- lm(Fertility ~ Agriculture + Examination + Education, swiss)
anova(fit1, fit3)
deviance(fit3)
d <- deviance(fit3)/43
n <- deviance(fit1)-deviance(fit3) / 2
n <- (deviance(fit1)-deviance(fit3)) / 2
n / d
pf(n/d, 2, 43, lower.tail=FALSE)
shapiro.test(fit3$residuals)
anova(fit1, fit3,
| fit5, fit6)
anova(fit1, fit3,fit5, fit6)
View(ravenData)
mdl <- glm(ravenWinNum ~ ravenScore, revenData)
help()
mdl <- glm(ravenWinNum ~ ravenScore, family=binomial, revenData)
mdl <- glm(ravenWinNum ~ ravenScore, family=binomial,data= revenData)
mdl <- glm(ravenWinNum ~ ravenScore, family=binomial,data= ravenData)
lodds <- predict(mdl, data.frame(ravenScore=c(0, 3, 6))
)
exp(lodds)/(1+exp(lodds))
summary(mdl)
confint(mdl)
exp(confint(mdl))
anova(mdl)
qchisq(0.95, 1)
var(rpois(1000,
50))
View(hits)
class(hits[,'date'])
as.integer(head(hits[,'date'])
)
mdl <- glm(visits ~ date, poisson, hits)
summary(mdl)
confint(mdl, 'date')
exp(confint(mdl, 'date'))
which.max(hits[,'visits']
)
hits[704,]
lambda <- mdl$fitted.values[704]
qpois(.95, lambda)
help()
mdl2 <- glm(formula = simplystats ~ date, family =
| poisson, data = hits, offset = log(visits + 1))
mdl2 <- glm(formula = simplystats ~ date, family =
poisson, data = hits, offset = log(visits + 1))
qpois(.95,
mdl2$fitted.values[704])
data(mtcars)
names(mtcars)
View(mtcars)
fit <- lm(mtcars$mpg ~ as.factor(mtcars$cyl) + mtcars$wt, mtcars)
summary(fit)
6.0709 / 33.9908
33.9908 / 6.0709
fit <- lm(mtcars$mpg ~ factor(mtcars$cyl) + mtcars$wt, mtcars)
summary(fit)
fit=lm(mpg~factor(cyl)+wt+factor(cyl)*wt,data=mtcars)
summary(fit)
fit2 <- lm(mtcars$mpg ~ as.factor(mtcars$cyl) + mtcars$wt, mtcars)
summary(fit2)
39.571 / 15.703
fit2 <- lm(mpg ~ factor(cyl) + wt + cyl*wt, data=mtcars)
summary(fit2)
fit1 <- lm(mpg ~ factor(cyl) + wt , data=mtcars)
summary(fit1)
fit2 <- lm(mpg ~ factor(cyl) + wt + factor(cyl)*wt, data=mtcars)
summary(fit2)
39.571 / 15.703
2.258e-10 / 3.594e-11
3.594e-11 / 2.258e-10
lm(mpg ~ I(wt * 0.5) + factor(cyl), data = mtcars)
f <- lm(mpg ~ I(wt * 0.5) + factor(cyl), data = mtcars)
summary(f)$coef
coef(f)
fit1 <- lm(mpg ~ factor(cyl) + wt, data = mtcars)
summary(fit1)
anova(fit1)
View(shuttle)
?shuttle
??shuttle
data(shuttle)
library(MASS)
data(shuttle)
View(shuttle)
fit4 <- glm(use ~ wind, family=binomial, data=shuttle)
summary(fit4)
deviance(fit4)
.9 / (1 - .9)
.1 / .9
setwd("F:/Data Science/8. Pratical Machine Learning/Week2/Assessment")
library(AppliedPredictiveModeling)
library(caret)
data(AlzheimerDisease)
set.seed(3433)
library(AppliedPredictiveModeling)
data(AlzheimerDisease)
adData = data.frame(diagnosis,predictors)
inTrain = createDataPartition(adData$diagnosis, p = 3/4)[[1]]
training = adData[ inTrain,]
testing = adData[-inTrain,]
a <- which(grepl("^IL|diagnosis", colnames(training), ignore.case = F))
df <- training[,a]
View(df)
g1 <- train(training$diagnosis~., data=training, method="glm")
g1 <- train(df$diagnosis~., data=df, method="glm")
training <- training[c(1,58:69)]
View(training)
testing <-testing[c(1,58:69)]
View(testing)
g1 <- train(df$diagnosis~., data=training, method="glm")
library(AppliedPredictiveModeling)
data(concrete)
library(caret)
set.seed(975)
library(AppliedPredictiveModeling)
data(concrete)
library(caret)
set.seed(975)
library(AppliedPredictiveModeling)
g1 <- train(df$diagnosis~., data=training, method="glm")
set.seed(3433)
library(AppliedPredictiveModeling)
data(AlzheimerDisease)
adData = data.frame(diagnosis,predictors)
inTrain = createDataPartition(adData$diagnosis, p = 3/4)[[1]]
training = adData[ inTrain,]
testing = adData[-inTrain,]
a <- which(grepl("^IL", colnames(training), ignore.case = F))
df <- training[,a]
b <- prcomp(df[,-1])
summary(b)
View(b)
preProc<-preProcess(df[, -1],method="pca")
trainPC<-predict(preProc,df[, -1])
b <- prcomp(trainPC[,-1])
dim(b)
summary(b)
relative.var
cumsum(b)
preProc<-preProcess(df[, -1],method="pca", thresh=.9)
trainPC<-predict(preProc,df[, -1])
b <- prcomp(trainPC[,-1])
summary(b)
preProcess (caret)
View(SuperPlasticizer)
View(cpmcrete)
library(AppliedPredictiveModeling)
data(concrete)
library(caret)
set.seed(975)
inTrain = createDataPartition(mixtures$CompressiveStrength, p = 3/4)[[1]]
training = mixtures[ inTrain,]
testing = mixtures[-inTrain,]
View(cpmcrete)
View(concrete)
is.numeric(concrete) < 0
log(-3)
log(0)
View(mtcars)
